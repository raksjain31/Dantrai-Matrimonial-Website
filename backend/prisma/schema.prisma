// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum  UserRole {
  ADMIN
  USER
}
enum  Gender {
  MALE
  FEMALE
}

enum  Villages {
  DANTRAI
  NIMBAJ
  MALGAON
  AMBLARI
  ANADARA
  MAROL
  PAMERA
  POSINDARA
  DHAN
  MADIYA
  MERMODAVARA

}

model User {
  id String @id @default(uuid())
  name String?
  email String @unique
  phone String @unique
  image String?
  role UserRole @default(USER)
  village Villages @default(DANTRAI)
  Father String? //Father or GrandFather full name
  password String
  isVerified Boolean @default(false)
  verificationToken String?
  passwordResetToken String?
  passwordResetExpiry String?
  IsApproved Boolean @default(false)
  ApprovedbyUserId String?
  ApprovedDate DateTime?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profiles Profile[]
 
}

model Profile {

id String @id @default(uuid())
fullname String
gender Gender 
dateOfBirth DateTime @db.Date
age Int?
height String
currentLiveCity String
phone String?
//annualIncome String
userId String
image String?
aboutme String?//about my self 250 words
education String?// Highest Degree
college String? //College or Institute
aboutmyeducation String? //few words for my education
//Career
employedIn String?//Private Sector GovtSector//business
occupation String?
organisation String?//company or firm name
aboutmycareer String?// few words about my Career
//familydata
father String?
//fatheroccupation String?
//fatherincome String?
mother String?
//motheroccupation String?
noOfBrothers Int
noOfMarriedBrothers Int
noOfsisters Int
noOfMarriedSisters Int
aboutmyfamily String?
hobbies String?
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

//Relationship
user User @relation(fields:[userId], references: [id], onDelete: Cascade)

}